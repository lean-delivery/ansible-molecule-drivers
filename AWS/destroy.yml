---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not ((lookup('env', 'MOLECULE_DEBUG') | bool) or (molecule_yml.provisioner.log | default(false) | bool)) }}"
  vars:
    keypair_name: "molecule-key_\
      {{ lookup('env','MOLECULE_PROJECT_DIRECTORY').split('/')[-1] }}_\
      {{ lookup('env','MOLECULE_SCENARIO_NAME') }}-{{ lookup('env', 'CI_COMMIT_REF_NAME' ) }}"
    ci_branch_name: "{{ lookup('env', 'CI_COMMIT_REF_NAME' ) }}"
  tasks:

    - name: Delete remote keypair
      ec2_key:
        name: '{{ keypair_name }}'
        state: absent

    - name: Get instances list
      ec2_instance_info:
        filters:
          "tag:Name": "{{ molecule_yml.platforms | map(attribute='name') | list | product([ci_branch_name]) | map('join', '-') | list }}"
        region: us-east-1
      register: ec2_sets

    - name: Destroy molecule instance(s)
      ec2:
        state: absent
        region: us-east-1
        instance_ids: "{{ ec2_sets.instances | map(attribute='instance_id') | list }}"
        wait: true
      register: server
      when: ( ec2_sets.instances | map(attribute='instance_id') | list | length )

    - name: Delete volume(s)
      ec2_vol:
        id: '{{ item }}'
        state: absent
      loop: "{{ ec2_sets.instances | sum(attribute='block_device_mappings', start=[]) | map(attribute='ebs.volume_id') | list }}"
      when: ( ec2_sets.instances | sum(attribute='block_device_mappings', start=[]) | map(attribute='ebs.volume_id') | list | length )

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config
      set_fact:
        instance_conf: {}

    - name: Dump instance config
      copy:
        content: '{{ instance_conf | to_json | from_json | to_yaml }}'
        dest: '{{ molecule_instance_config }}'
      when: server.changed | bool
